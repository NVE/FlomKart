All of those errors are now protected by the "failwith" function in order to keep running big loops in NC_DATABASE.R and GOF_NC.R
Some of them print messages such as 
[1] "Warning: the function newtonRaphson failed in gev_mom"
but there is no tracking in the F4NC.r functions yet. 
Should probably be implemented if we want to understand better some of the error messages.


Error in solve.default(x$hessian) : 
  Lapack routine dgesv: system is exactly singular: U[1,1] = 0 
9 solve.default(x$hessian) 
8 solve(x$hessian) 
7 solve(x$hessian) 
6 tryCatchList(expr, classes, parentenv, handlers) 
5 tryCatch(solve(x$hessian), finally = "Warning: could not solve Hessian") at GL.R#140
4 FUN(sdat$flom_DOGN) 
3 tryCatchList(expr, classes, parentenv, handlers) 
2 tryCatch(FUN(sdat$flom_DOGN), finally = NA) at RUN_ALL.R#209
1 run.all_AD(dat, station_nb_vect, method = "MLE") 

Error in solve.default(x$hessian) : 
  Lapack routine dgesv: system is exactly singular: U[1,1] = 0
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Error in diag(z$cov) : invalid 'nrow' value (too large or NA)
In addition: Warning message:
In diag(z$cov) : NAs introduced by coercion
Error in if (any(U < 0 | U > 1)) stop("null distribution function returned values outside [0,1]") : 
  missing value where TRUE/FALSE needed

Solve is from the base package and errors are now handled at the call by "failwith"
newtonRaphson is in the pracma package, so the pb could be fixed in its code?


Common error in newtonRaphson:
Error in if (dfx == 0) { : missing value where TRUE/FALSE needed


So we have:
newtonRaphson in gev_mom
gl_mom also has a newtonRaphson, but it hasn't cause problems so far
solve in gl_mle

Pearson Lmom sometimes doens't work and doesn't really return an error, just gives NAs back?


"ks.test" sometimes throws this error (maybe "ad.test" too, to investigate in detail):

Error in if (any(U < 0 | U > 1)) stop("null distribution function returned values outside [0,1]") : 
  missing value where TRUE/FALSE needed
6: In log(1 - k * (x - xi)/alfa) : NaNs produced


Those errors in nested functions wer also handled with "failwith":

Error in if (dfx == 0) { : missing value where TRUE/FALSE needed
In addition: There were 50 or more warnings (use warnings() to see the first 50)
[1] "Warning: the function newtonRaphson failed in gev_mom"
Error in FUN(sample_q) : object 'locp' not found


Error in if (dfx == 0) { : missing value where TRUE/FALSE needed
In addition: There were 29 warnings (use warnings() to see them)
Error in solve.default(x$hessian) : 
  Lapack routine dgesv: system is exactly singular: U[1,1] = 0
Error in diag(z$cov) : invalid 'nrow' value (too large or NA)
In addition: Warning message:
In diag(z$cov) : NAs introduced by coercion
Error: R character data can only be written to NC_CHAR variable












Error in stats::optim(x = c(43.974006652832, 50.4795417785645, 32.8570938110352,  : 
  initial value in 'vmmin' is not finite
Error in stats::optim(x = c(44.8639450073242, 81.6659317016602, 53.0579032897949,  : 
  initial value in 'vmmin' is not finite
Error in fgev.norm(x = x, start = start, ..., nsloc = nsloc, std.err = std.err,  : 
  observed information matrix is singular; use std.err = FALSE
Error in if (min(xcont) < parameters0[1]) parameters0[1] <- min(xcont) : 
  missing value where TRUE/FALSE needed
Error in if (min(xcont) < parameters0[1]) parameters0[1] <- min(xcont) : 
  missing value where TRUE/FALSE needed
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Error in if (beta >= 0) { : missing value where TRUE/FALSE needed
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Error in if (min(xcont) < parameters0[1]) parameters0[1] <- min(xcont) : 
  missing value where TRUE/FALSE needed
In addition: Warning messages:
1: In densfun(x, parm[1], parm[2], ...) : NaNs produced
2: In densfun(x, parm[1], parm[2], ...) : NaNs produced
3: In densfun(x, parm[1], parm[2], ...) : NaNs produced
4: In densfun(x, parm[1], parm[2], ...) : NaNs produced
5: In densfun(x, parm[1], parm[2], ...) : NaNs produced
6: In densfun(x, parm[1], parm[2], ...) : NaNs produced
7: In densfun(x, parm[1], parm[2], ...) : NaNs produced
Error in if (min(xcont) < parameters0[1]) parameters0[1] <- min(xcont) : 
  missing value where TRUE/FALSE needed
In addition: There were 50 or more warnings (use warnings() to see the first 50)
There were 44 warnings (use warnings() to see them)








